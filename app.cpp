// # Code generated by Elang Compiler
#include<bits/stdc++.h>
class ProgramLoader{public:ProgramLoader();~ProgramLoader();public:void Run();private:std::string readline(std::string);std::string readword(std::string);const char readchar(std::string);void print(std::string);void sysexec(std::string);std::string numberToText(double __num__);bool numberToBool(double __num__);std::string charToText(char __num__);double charToNumber(char __char__);bool charToBool(char __char__);std::string boolToText(bool __bool__);double boolToNumber(bool __bool__);bool textToBool(std::string __text__);double textToNumber(std::string __text__);};
ProgramLoader::ProgramLoader(){}ProgramLoader::~ProgramLoader(){}void ProgramLoader::Run(){}
std::string ProgramLoader::readline(std::string __text__=""){std::string buffer;if(!__text__.empty())std::cout<<__text__;std::getline(std::cin,buffer);return buffer;}std::string ProgramLoader::readword(std::string __text__=""){std::string buffer;if(!__text__.empty())std::cout<<__text__;std::cin >> buffer;return buffer;}const char ProgramLoader::readchar(std::string __text__=""){std::string buffer;if(!__text__.empty())std::cout<<__text__;std::cin >> buffer;return buffer[0];}void ProgramLoader::print(std::string __text__){std::cout<<__text__;}void ProgramLoader::sysexec(std::string __text__){system(__text__.c_str());}std::string ProgramLoader::numberToText(double __num__){return std::to_string(__num__);}bool ProgramLoader::numberToBool(double __num__){return __num__ != 0;}std::string ProgramLoader::charToText(char __char__){std::string buffer{__char__}; return buffer;}double ProgramLoader::charToNumber(char __char__){return static_cast<double>(__char__) - 48;}bool ProgramLoader::charToBool(char __char__){return __char__ != '0';}std::string ProgramLoader::boolToText(bool __bool__){std::string buffer;if(__bool__)buffer="true";else buffer="false";return buffer;}double ProgramLoader::boolToNumber(bool __bool__){return __bool__;}bool ProgramLoader::textToBool(std::string __text__){return __text__=="true"||__text__=="TRUE";}double ProgramLoader::textToNumber(std::string __text__){try{return std::stold(__text__);}catch(...){std::cerr<<"DataConvertException: Text content is not valid to conversion. | "<<"Content Error: "<<__text__;exit(EXIT_FAILURE);}}
int main(int argc, char* argv[]){auto startup=new ProgramLoader();startup->Run();return EXIT_SUCCESS;}