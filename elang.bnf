 // # DEFINITIONS

<digit> ::=
	  0-9

<alpha> ::=
	  a-zA-Z

<identifier> ::= 
	  <alpha>
	| <alpha><digit>

<type> ::=
	  int
	| char
	| void
	| bool
	| string
	| float

// # GRAMMAR

<variable-declaration> ::= 
	  'var' ':' <type> ';'
	| 'var' ':' <type> <identifier> ';'
	| 'var' ':' <type> <identifier> '=' <expression> ';'
	| 'var' ':' <type> <identifier> '=' "bind of type data" ';'
	| 'var' ':' <type> <identifier> [ <digit> ] ';'
	| 'var' ':' <type> <identifier> [ <digit> ] '=' { "bind of type data", "bind of type data" } ';'

<expression> ::= 
	   <expression>
	|  <digit> + | - | * | / <digit>
	|  <digit> + | - | * | / <identifier>
	|  <digit> + | - | * | / <expression>

<function-declaration> ::=
	   'fun' '::' <identifier> '(' ')' ':' <type> '{' '}'
	|  'fun' '::' <identifier> '(' <list-variable-declaration> ')' ':' <type> '{' <expression> '}'
	